<configure
    xmlns="http://namespaces.zope.org/zope"
    xmlns:five="http://namespaces.zope.org/five"
    xmlns:i18n="http://namespaces.zope.org/i18n"
    xmlns:genericsetup="http://namespaces.zope.org/genericsetup"
    xmlns:plone="http://namespaces.plone.org/plone"
    xmlns:browser="http://namespaces.zope.org/browser"
    xmlns:zcml="http://namespaces.zope.org/zcml"
    i18n_domain="ngi.notify.datadog">

  <!-- Include configuration for dependencies listed in setup.py -->
  <includeDependencies package="." />
  
  <i18n:registerTranslations directory="locales" />

  <!-- browser -->
  <include package=".browser" />

  <!-- control panel -->
  <include file="controlpanel.zcml" />

  <!-- Register an extension profile to make the product installable
       in Plone -->
  <genericsetup:registerProfile
      name="default"
      title="Notify events to DataDog"
      directory="profiles/default"
      description=""
      provides="Products.GenericSetup.interfaces.EXTENSION"
      />

    <!-- subscriber -->
    <subscriber
        zcml:condition="installed zope.processlifetime"
        for="zope.processlifetime.IProcessStarting"
        handler=".events.processStart"
        />

    <subscriber
        zcml:condition="installed zope.processlifetime"
        for="zope.processlifetime.IDatabaseOpened"
        handler=".events.databaseOpened"
        />

    <subscriber
        for="Products.CMFCore.interfaces.IContentish
             Products.CMFCore.interfaces.IActionRaisedExceptionEvent"
        handler=".events.actionRaisedEvent"
        />

    <subscriber
        for="Products.CMFCore.interfaces.IContentish
             Products.CMFCore.interfaces.IActionSucceededEvent"
        handler=".events.actionRaisedEvent"
        />

    <subscriber
        zcml:condition="installed zope.lifecycleevent"
        for="Products.CMFCore.interfaces.IContentish
             zope.lifecycleevent.interfaces.IObjectCreatedEvent"
        handler=".events.createdContent"
        />

    <subscriber
        zcml:condition="installed zope.lifecycleevent"
        for="Products.CMFCore.interfaces.IContentish
             zope.lifecycleevent.interfaces.IObjectModifiedEvent"
        handler=".events.modifiedContent"
        />

    <subscriber
        for="zope.interface.Interface
             Products.PlonePAS.events.UserLoggedInEvent"
        handler=".events.loggedIn"
        />

    <subscriber
        for="zope.interface.Interface
             Products.PlonePAS.events.UserLoggedOutEvent"
        handler=".events.loggedOut"
        />

    <subscriber
        for="Products.PluggableAuthService.interfaces.events.IPrincipalCreatedEvent"
        handler=".events.userCreated"
        />

    <subscriber
        for="Products.PluggableAuthService.interfaces.events.IPrincipalDeletedEvent"
        handler=".events.userDeleted"
        />

    <subscriber
        for="plone.app.controlpanel.interfaces.IConfigurationChangedEvent"
        handler=".events.cpChanged"
        />

</configure>